jobs:
  linux-x86_64:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: ./.github/actions/set-linux-distro-version
    - continue-on-error: true
      name: Set mvn build command based on matrix
      run: "command=\"mvn  -pl ':nd4j-native-preset,:libnd4j,:nd4j-native' ${{ matrix.mvn_ext\
        \ }}  -Pcpu -Dlibnd4j.buildthreads=${{ matrix.build_threads }} -Dhttp.keepAlive=false\
        \ -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3  \
        \ -Possrh  -DskipTestResourceEnforcement=true  -Dmaven.javadoc.failOnError=false\
        \ -Djavacpp.platform=linux-x86_64  -Pcpu  --also-make  --batch-mode  -DskipTests\"\
        \nif [ \"${{ matrix.helper }}\" != '' ] && [ \"${{ matrix.extension }}\" !=\
        \ '' ]; then\n       mvn_ext=\" -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{\
        \ matrix.extension }} -Djavacpp.platform.extension=-${{ matrix.helper }}-${{\
        \ matrix.extension }} -Dlibnd4j.classifier=linux-x86_64-${{ matrix.helper\
        \ }}-${{matrix.extension}}\"\nelif [ \"${{ matrix.helper }}\" != '' ]; then\n\
        \       mvn_ext=\" -Dlibnd4j.helper=${{ matrix.helper }} -Dlibnd4j.extension=${{\
        \ matrix.helper }} -Djavacpp.platform.extension=-${{ matrix.helper }} -Dlibnd4j.classifier=linux-x86_64-${{\
        \ matrix.helper }}\"\nelif [ \"${{ matrix.extension }}\" != '' ]; then\n \
        \      mvn_ext=\" -Dlibnd4j.extension=${{ matrix.extension }} -Djavacpp.platform.extension=-${{\
        \ matrix.extension }} -Dlibnd4j.classifier=linux-x86_64-${{ matrix.extension\
        \ }}\"\n else\n     mvn_ext=\"\"\nfi\nif  [  \"${{ matrix.libnd4j_file_download\
        \ }}\" != '' ]; then\n   echo \"Adding libnd4j download\"\n   echo \"LIBND4J_FILE_NAME=${libnd4j_download_file_url}\"\
        \ >> $GITHUB_ENV\nfi\ncommand=\"${command} ${mvn_ext}\"\necho \"Setting command\
        \ for helper ${{ matrix.helper }} and extension ${{ matrix.extension }} to\
        \ ${command}\"\necho \"DEPLOY_COMMAND=${command} deploy -Dlibnd4j.cpu.compile.skip=true\
        \ -Djavacpp.compiler.skip=true -Djavacpp.parser.skip=true\" >> $GITHUB_ENV\n\
        echo \"INSTALL_COMMAND=${command} install\" >> \"$GITHUB_ENV\"\necho \"COMMAND=${command}\"\
        \ >> \"$GITHUB_ENV\"\n"
      shell: bash
    - continue-on-error: true
      uses: ./.github/actions/update-deps-linux
    - continue-on-error: true
      env:
        DEBIAN_FRONTEND: noninteractive
        EXTENSION: ${{ matrix.extension }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HELPER: ${{ matrix.helper }}
        JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64/
        MAVEN_GPG_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.PACKAGES_GPG_PASS }}
        MAVEN_OPTS: -Xmx2g
        MAVEN_PASSWORD: ${{ secrets.SONATYPE_USER1_PASS }}
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USER_1 }}
        MODULES: ${{ matrix.mvn_flags }}
        PERFORM_RELEASE: ${{ matrix.deploy_to_release_staging }}
        PUBLISH_TO: ossrh
        RELEASE_REPO_ID: ${{ matrix.release_repo_id }}
        RELEASE_VERSION: ${{ matrix.release_version }}
        SNAPSHOT_VERSION: ${{ matrix.snapshot_version }}
      name: Build on  linux-x86_64
      uses: ./.github/actions/build-centos
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Packages
      uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: temurin
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.SONATYPE_GPG_KEY }}
        java-version: 11
        server-id: ${{ github.event.inputs.serverId }}
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      env:
        DEBIAN_FRONTEND: noninteractive
        EXTENSION: ${{ matrix.extension }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        HELPER: ${{ matrix.helper }}
        MAVEN_GPG_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.PACKAGES_GPG_PASS }}
        MAVEN_OPTS: -Xmx2g
        MAVEN_PASSWORD: ${{ secrets.SONATYPE_USER1_PASS }}
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USER_1 }}
        MODULES: ${{ matrix.mvn_flags }}
        PERFORM_RELEASE: ${{ matrix.deploy_to_release_staging }}
        PUBLISH_TO: ossrh
        RELEASE_REPO_ID: ${{ matrix.release_repo_id }}
        RELEASE_VERSION: ${{ matrix.release_version }}
        SNAPSHOT_VERSION: ${{ matrix.snapshot_version }}
      name: Deploy
      run: "# Docker builds are root owned\nsudo chown -R $USER $GITHUB_WORKSPACE/*\n\
        if [ \"$PERFORM_RELEASE\" == 1 ]; then\n          export COMMAND=\"${DEPLOY_COMMAND}\"\
        \n          bash \"$GITHUB_WORKSPACE/release-specified-component.sh\" \"${RELEASE_VERSION}\"\
        \ \"${SNAPSHOT_VERSION}\" \"${RELEASE_REPO_ID}\" \"${DEPLOY_COMMAND}\"\n \
        \        else\n             echo \"Running build and deploying to snapshots\"\
        \n             eval \"${DEPLOY_COMMAND}\"\nfi\n"
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        extension:
        - compat
        helper:
        - ''
        include:
        - experimental: true
          mvn_ext: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags
        - debug_enabled: ${{ github.event.inputs.debug_enabled }}
          experimental: true
          name: Debug enabled
        - experimental: true
          name: OS to run on
          runs_on: ${{ github.event.inputs.runsOn }}
        - experimental: true
          libnd4j_file_download: ${{ github.event.inputs.libnd4jUrl }}
          name: OS to run on
        - deploy_to_release_staging: ${{ github.event.inputs.deployToReleaseStaging
            }}
          experimental: true
          name: Whether to deploy to release staging or not
        - experimental: true
          name: Release version
          release_version: ${{ github.event.inputs.releaseVersion }}
        - experimental: true
          name: Snapshot version
          snapshot_version: ${{ github.event.inputs.snapshotVersion }}
        - experimental: true
          name: Server id
          server_id: ${{ github.event.inputs.serverId }}
        - experimental: true
          name: The release repository to run on
          release_repo_id: ${{ github.event.inputs.releaseRepoId }}
        - experimental: true
          mvn_flags: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags to use as part of the build
        - build_threads: ${{ github.event.inputs.buildThreads }}
          experimental: true
          name: The number of threads to build libnd4j with
on:
  repository_dispatch:
    types: trigger-ga___build-deploy-linux-x86_64-compat.yml
