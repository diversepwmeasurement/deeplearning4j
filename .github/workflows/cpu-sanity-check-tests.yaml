jobs:
  linux-x86_64:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: ./.github/actions/set-linux-distro-version
    - continue-on-error: true
      uses: ./.github/actions/update-deps-linux
    - continue-on-error: true
      id: cache-cmake
      name: Cache cmake install
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-cmake
        path: /opt/cmake
        restore-keys: ${{ runner.os }}-cmake
    - continue-on-error: true
      id: cache-protobuf
      name: Cache protobuf install
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-protobuf
        path: /opt/protobuf
        restore-keys: ${{ runner.os }}-protobuf
    - continue-on-error: true
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-protobuf-linux
    - continue-on-error: true
      if: steps.cache-cmake.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-cmake-linux
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Packages
      uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      if: ${{ github.event.inputs.libnd4jUrl != '' }}
      name: Setup libnd4j home if a download url is specified
      run: 'mkdir "${GITHUB_WORKSPACE}/openblas_home"

        cd "${GITHUB_WORKSPACE}/openblas_home"

        wget https://repo1.maven.org/maven2/org/bytedeco/openblas/0.3.19-1.5.7/openblas-0.3.19-1.5.7-linux-x86_64.jar

        unzip openblas-0.3.19-1.5.7-linux-x86_64.jar

        cd ..

        echo "OPENBLAS_PATH=${GITHUB_WORKSPACE}/openblas_home/org/bytedeco/openblas/linux-x86_64"
        >> "$GITHUB_ENV"

        cp ${GITHUB_WORKSPACE}/openblas_home/org/bytedeco/openblas/linux-x86_64/libopenblas.so.0  ${GITHUB_WORKSPACE}/openblas_home/org/bytedeco/openblas/linux-x86_64/libopenblas.so

        '
      shell: bash
    - continue-on-error: true
      name: Download dl4j-test-resources
      uses: ./.github/actions/download-dl4j-test-resources-linux
    - continue-on-error: true
      env:
        DEBIAN_FRONTEND: noninteractive
        EXTENSION: ${{ matrix.extension }}
        HELPER: ${{ matrix.helper }}
        MAVEN_OPTS: -Xmx2g
        MODULES: ${{ matrix.mvn_flags }}
      name: Build on  linux-x86_64
      run: "\nexport PATH=/opt/protobuf/bin:/opt/cmake/bin:$PATH\nmvn --version\n\
        cmake --version\nprotoc --version\nexport PATH=/opt/protobuf/bin:/opt/cmake/bin:$PATH\n\
        export LIBGOMP_PATH=/usr/lib/gcc/x86_64-linux-gnu/5.5.0/libgomp.so\nif [ -z\
        \ \"${EXTENSION}\" ] || [ -n \"${EXTENSION}\" ]; then\n    export LIBGOMP_PATH=/usr/lib/gcc/x86_64-linux-gnu/7.5.0/libgomp.so\n\
        \    echo \"Extensions specified. This needs a newer version of gcc.\"\n \
        \   sudo apt-get install gcc-7 g++-7\n    echo \"Using newer version of libgomp.\"\
        \n    ls /usr/bin | grep gcc\n    ls /usr/bin | grep g++\n    sudo update-alternatives\
        \ --install /usr/bin/gcc gcc /usr/bin/gcc-7 90\n    sudo update-alternatives\
        \ --install  /usr/bin/g++ g++ /usr/bin/g++-7  90\n    gcc --version\nfi\n\
        if [ \"${{ matrix.helper }}\" != '' ] && [ \"${{ matrix.extension }}\" !=\
        \ '' ]; then\n        mvn_ext=\" -Dplatform.classifier=linux-x86_64-${{ matrix.helper\
        \ }}-${{matrix.extension}}\"\nelif [ \"${{ matrix.helper }}\" != '' ]; then\n\
        \        mvn_ext=\"-Dplatform.classifier=linux-x86_64-${{ matrix.helper }}\"\
        \nelif [ \"${{ matrix.extension }}\" != '' ]; then\n       mvn_ext=\" -Dplatform.classifier=linux-x86_64-${{matrix.extension}}\"\
        \nelse\n        mvn_ext=\" -Dplatform.classifier=linux-x86_64\"\nfi\ncd ${GITHUB_WORKSPACE}/platform-tests\
        \ && mvn ${mvn_ext} -Djavacpp.platform=linux-x86_64 clean test \n"
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        extension:
        - avx2
        - avx512
        - ''
        helper:
        - onednn
        - ''
        include:
        - experimental: true
          mvn_ext: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags
        - experimental: true
          name: OS to run on
          runs_on: ubuntu-20.04
        - experimental: true
          mvn_flags: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags to use as part of the build
  mac-x86_64:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up Java for publishing to OSSRH
      uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      name: Update path for gnu sed
      run: 'brew install gpg1 gnu-sed unzip  ccache gcc swig autoconf-archive automake
        cmake libomp libtool libusb ant maven nasm xz pkg-config sdl gpg bison flex
        perl ragel binutils gradle gmp isl libmpc mpfr wget python

        echo "$(brew --prefix)/opt/gnu-sed/libexec/gnubin" >> $GITHUB_PATH

        '
      shell: bash
    - continue-on-error: true
      name: Download dl4j-test-resources
      uses: ./.github/actions/download-dl4j-test-resources-linux
    - continue-on-error: true
      env:
        EXTENSION: ${{ matrix.extension }}
        HELPER: ${{ matrix.helper }}
        MAVEN_OPTS: -Xmx2g
        MODULES: ${{ matrix.mvn_flags }}
      name: Build and install
      run: "if [ \"${{ matrix.helper }}\" != '' ] && [ \"${{ matrix.extension }}\"\
        \ != '' ]; then\n       mvn_ext=\" -Dplatform.classifier=macosx-x86_64-${{\
        \ matrix.helper }}-${{matrix.extension}}\"\nelif [ \"${{ matrix.helper }}\"\
        \ != '' ]; then\n       mvn_ext=\"-Dplatform.classifier=macosx-x86_64-${{\
        \ matrix.helper }}\"\nelif [ \"${{ matrix.extension }}\" != '' ]; then\n \
        \     mvn_ext=\" -Dplatform.classifier=macosx-x86_64-${{matrix.extension}}\"\
        \nelse\n       mvn_ext=\" -Dlibnd4j.classifier=macosx-x86_64\"\n fi\n cd ${GITHUB_WORKSPACE}/platform-tests\
        \ && mvn  -Djavacpp.platform=macosx-x86_64 ${mvn_ext} clean test \n"
      shell: bash
    strategy:
      fail-fast: false
      matrix:
        extension:
        - avx2
        - avx512
        - ''
        helper:
        - onednn
        - ''
        include:
        - experimental: true
          mvn_ext: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags
        - debug_enabled: ${{ github.event.inputs.debug_enabled }}
          experimental: true
          name: Debug enabled
        - experimental: true
          name: OS to run on
          runs_on: ${{ github.event.inputs.runsOn }}
        - experimental: true
          mvn_flags: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags to use as part of the build
  windows-x86_64:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Packages
      uses: konduitai/setup-java@main
      with:
        cache: maven
        distribution: temurin
        java-version: 11
    - continue-on-error: true
      uses: msys2/setup-msys2@v2
      with:
        install: base-devel  git tar pkg-config unzip p7zip zip autoconf autoconf-archive
          automake patch mingw-w64-x86_64-gnupg  mingw-w64-x86_64-make --noconfirm
          mingw-w64-x86_64-cmake mingw-w64-x86_64-nasm mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-libtool mingw-w64-x86_64-gcc  mingw-w64-x86_64-gcc-fortran
          mingw-w64-x86_64-libwinpthread-git mingw-w64-x86_64-SDL mingw-w64-x86_64-ragel
        msystem: MINGW64
        update: true
    - continue-on-error: true
      name: Setup windows path
      run: echo "C:\msys64\mingw64\bin;C:\msys64\usr\bin" | Out-File -FilePath $env:GITHUB_PATH
        -Encoding utf8 -Append
      shell: powershell
    - continue-on-error: true
      if: ${{ matrix.libnd4j_file_download != '' }}
      name: Setup libnd4j home if a download url is specified
      run: 'mkdir "%GITHUB_WORKSPACE%/openblas_home"

        cd "%GITHUB_WORKSPACE%/openblas_home"

        wget https://repo1.maven.org/maven2/org/bytedeco/openblas/0.3.19-1.5.7/openblas-0.3.19-1.5.7-windows-x86_64.jar

        unzip openblas-0.3.19-1.5.7-windows-x86_64.jar

        cd ..

        echo "OPENBLAS_PATH=${GITHUB_WORKSPACE}/openblas_home/org/bytedeco/openblas/windows-x86_64/"
        | Out-File -FilePath  "$env:GITHUB_ENV" -Encoding utf8 -Append

        '
      shell: powershell
    - continue-on-error: true
      name: Download dl4j-test-resources
      uses: ./.github/actions/download-dl4j-test-resources-windows
    - continue-on-error: true
      env:
        EXTENSION: ${{ matrix.extension }}
        HELPER: ${{ matrix.helper }}
        MODULES: ${{ matrix.mvn_flags }}
      name: Run windows cpu build
      run: "if ( \"${{ matrix.helper }}\" -ne \"\"  -And \"${{ matrix.extension }}\"\
        \ -ne \"\" ) {\n   $mvn_ext=\" -platform.classifier=windows-x86_64-${{ matrix.helper\
        \ }}-${{matrix.extension}}\"\n} elseif ( \"${{ matrix.helper }}\" -ne \"\"\
        \ ) {\n    $mvn_ext=\" -Dplatform.classifier=windows-x86_64-${{ matrix.helper\
        \ }}\"\n}  elseif ( \"${{ matrix.extension }}\" -ne \"\" ) {\n     $mvn_ext=\"\
        \ -Dplatform.classifier=windows-x86_64-${{matrix.extension}} \"\n} else {\n\
        \   $mvn_ext=\" -Dplatform.classifier=windows-x86_64\"\n}\ncd \"%GITHUB_WORKSPACE%\\\
        platform-tests\"\nmvn \"%mvn_ext%\"  -Djavacpp.platform=windows-x86_64 clean\
        \ test\n"
      shell: cmd
    strategy:
      fail-fast: false
      matrix:
        extension:
        - avx2
        - avx512
        - ''
        helper:
        - onednn
        - ''
        include:
        - experimental: true
          mvn_ext: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags
        - experimental: true
          name: OS to run on
          runs_on: ${{ github.event.inputs.runsOn }}
        - experimental: true
          mvn_flags: ${{ github.event.inputs.mvnFlags }}
          name: Extra maven flags to use as part of the build
on:
  repository_dispatch:
    types: trigger-ga___cpu-sanity-check-tests.yaml
