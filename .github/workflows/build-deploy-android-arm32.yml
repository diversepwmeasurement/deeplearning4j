jobs:
  android-arm32:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: AutoModality/action-clean@v1
    - continue-on-error: true
      name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.8.0
      with:
        access_token: ${{ github.token }}
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: ./.github/actions/set-linux-distro-version
    - continue-on-error: true
      uses: ./.github/actions/update-deps-linux
    - continue-on-error: true
      id: cache-cmake
      name: Cache cmake install
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-cmake
        path: /opt/cmake
        restore-keys: ${{ runner.os }}-cmake
    - continue-on-error: true
      id: cache-protobuf
      name: Cache protobuf install
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-protobuf
        path: /opt/protobuf
        restore-keys: ${{ runner.os }}-protobuf
    - continue-on-error: true
      if: steps.cache-protobuf.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-protobuf-linux
    - continue-on-error: true
      if: steps.cache-cmake.outputs.cache-hit != 'true'
      uses: ./.github/actions/install-cmake-linux
    - continue-on-error: true
      name: Set up Java for publishing to GitHub Packages
      uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: temurin
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
        gpg-private-key: ${{ secrets.SONATYPE_GPG_KEY }}
        java-version: 11
        server-id: ossrh
        server-password: MAVEN_PASSWORD
        server-username: MAVEN_USERNAME
    - continue-on-error: true
      id: setup-ndk
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r21d
    - continue-on-error: true
      if: ${{ github.event.inputs.libnd4jUrl != '' }}
      name: Setup libnd4j home if a download url is specified
      run: 'mkdir "${GITHUB_WORKSPACE}/openblas_home"

        cd "${GITHUB_WORKSPACE}/openblas_home"

        wget https://repo1.maven.org/maven2/org/bytedeco/openblas/0.3.19-1.5.7/openblas-0.3.19-1.5.7-android-arm.jar

        unzip openblas-0.3.19-1.5.7-android-arm.jar

        cd ..

        echo "OPENBLAS_PATH=${GITHUB_WORKSPACE}/openblas_home/lib/armeabi-v7a" >>
        "$GITHUB_ENV"

        cp ${GITHUB_WORKSPACE}/openblas_home/lib/armeabi-v7a/libopenblas.so.0  ${GITHUB_WORKSPACE}/openblas_home/lib/armeabi-v7a/libopenblas.so

        '
      shell: bash
    - continue-on-error: true
      env:
        BUILD_USING_MAVEN: 1
        CROSS_COMPILER_DIR: ${{ steps.setup-ndk.outputs.ndk-path }}
        CURRENT_TARGET: android-arm
        DEBIAN_FRONTEND: noninteractive
        DEPLOY: 1
        DEPLOY_TO: ossrh
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        LIBND4J_BUILD_THREADS: ${{ github.event.inputs.buildThreads }}
        LIBND4J_CLASSIFIER: android-arm
        LIBND4J_FILE_NAME: ${{ matrix.libnd4j_file_download }}
        MAVEN_GPG_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.PACKAGES_GPG_PASS }}
        MAVEN_PASSWORD: ${{ secrets.SONATYPE_USER1_PASS }}
        MAVEN_USERNAME: ${{ secrets.SONATYPE_USER_1 }}
        MODULES: ${{ github.event.inputs.mvnFlags }}
        NDK_VERSION: r21d
        OPENBLAS_PATH: ${GITHUB_WORKSPACE}/openblas_home/lib/armeabi-v7a
        PERFORM_RELEASE: ${{ github.event.inputs.deployToReleaseStaging }}
        PROTO_EXEC: /opt/protobuf/bin/protoc
        PUBLISH_TO: ossrh
        RELEASE_REPO_ID: ${{ github.event.inputs.releaseRepoId }}
        RELEASE_VERSION: ${{ github.event.inputs.releaseVersion }}
        SNAPSHOT_VERSION: ${{ github.event.inputs.snapshotVersion }}
      name: Build on  android-arm32
      run: 'echo "libnd4j build threads ${{ github.event.inputs.buildThreads }}"

        echo "deploy to release staging repo or not ${{ github.event.inputs.deployToReleaseStaging
        }}"

        echo "release version ${{ github.event.inputs.releaseVersion }}"

        echo "snapshot version ${{ github.event.inputs.snapshotVersion }}"

        echo "debug enabled ${{ github.event.inputs.debug_enabled }}"

        echo "libnd4j url ${{ github.event.inputs.libnd4jUrl }}"

        echo "maven flags ${{ github.event.inputs.mvnFlags }}"

        echo "snapshot version ${{ github.event.inputs.snapshotVersion }}"

        echo "server id ${{ github.event.inputs.serverId }}"

        echo "release repo id ${{ github.event.inputs.releaseRepoId }}"


        export PATH=/opt/protobuf/bin:/opt/cmake/bin:$PATH

        mvn --version

        cmake --version

        protoc --version

        sudo apt install -y unzip wget

        mkdir "${GITHUB_WORKSPACE}/openblas_home"

        cd "${GITHUB_WORKSPACE}/openblas_home"

        wget https://repo1.maven.org/maven2/org/bytedeco/openblas/0.3.19-1.5.7/openblas-0.3.19-1.5.7-android-arm.jar

        unzip openblas-0.3.19-1.5.7-android-arm.jar

        cd ..

        export OPENBLAS_PATH=${GITHUB_WORKSPACE}/openblas_home/lib/armeabi-v7a/

        # download libnd4j from a url and set it up if LIBND4J_FILE_NAME is defined

        bash ./bootstrap-libnd4j-from-url.sh android arm32

        ${GITHUB_WORKSPACE}/libnd4j/pi_build.sh

        '
      shell: bash
on:
  repository_dispatch:
    types: trigger-ga___build-deploy-android-arm32.yml
